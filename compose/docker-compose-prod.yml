version: '3'
services:
  db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/opt/lib/postgresql/data
  nginx:
    restart: unless-stopped
    image: staticfloat/nginx-certbot
    ports:
      - 80:80/tcp
      - 443:443/tcp
    environment:
      CERTBOT_EMAIL: tecnologia@exploradoresdemadrid.org
      ENVSUBST_VARS: FQDN
      FQDN: "*.exploradoresdemadrid.org"
    volumes:
      - ./conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - web
  web:
    image: exploradoresdemadrid/decide:beta
    environment:
      RAILS_ENV: production
      RACK_ENV: production
      RAILS_SERVE_STATIC_FILES: "true"
      DEVISE_JWT_SECRET_KEY: ${DEVISE_JWT_SECRET_KEY}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      POSTGRES_HOST: db
    command: sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - "3000:3000"
    depends_on:
      - db
      - migration
    volumes:
      - ./log:/app/log
  salamandra:
    image: exploradoresdemadrid/salamandra:beta
    ports:
      - "8080:80"
    depends_on:
      - db
    volumes:
      - ./log:/app/salamandra/log
  migration:
    image: exploradoresdemadrid/decide:beta
    environment:
      RAILS_ENV: production
      RACK_ENV: production
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      POSTGRES_HOST: db
    command: "bundle exec rake db:create db:migrate"
    depends_on:
      - db
volumes:
  pgdata:
  letsencrypt: